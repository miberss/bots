on script load:
	set {-colour::main} to "<#757083>"
	set {-colour::accent} to "<#8A95A5>"
	set {-colour::info} to "<#B9C6AE>"
	set {-colour::warning} to "<#FFD131>"
	set {-colour::error} to "<#CC5A71>"
	set {-colour::success} to "<#7FC6A4>"

options:
    cm: %{-colour::main}%
    ca: %{-colour::accent}%
    ci: %{-colour::info}%
    cw: %{-colour::warning}%
    ce: %{-colour::error}%
    cs: %{-colour::success}%
    prefix: [â˜·]

function systemMessage(level: text, msg: text, inputs: objects = "none") :: string:
    set {_prefix} to formatted "%{-colour::%{_level}%}%{@prefix}{@cm}"
    
    if {_inputs::1} is "none":
        return formatted "%{_prefix}% %{_msg}%"

    loop {_inputs::*}:
        set {_msg} to join (regex split {_msg} by "(?<!\\)\(%loop-index%\)") with "%loop-value%{@cm}"
        set {_msg} to join (regex split {_msg} by "(?<!\\)\[%loop-index%\]") with "{@ca}%loop-value%{@cm}"
        set {_msg} to join (regex split {_msg} by "(?<!\\)\{%loop-index%\}") with """{@ca}%loop-value%{@cm}"""
    replace all "\(" with "(" in {_msg}
    replace all "\[" with "[" in {_msg}
    replace all "\{" with "{" in {_msg}
    
    return formatted "%{_prefix}% %{_msg}%"


function sysMsg(l: text, m: text, i: objects = "none") :: string:
    return systemMessage({_l}, {_m}, {_i::*})

function sm(l: text, m: text, i: objects = "none") :: string:
    return systemMessage({_l}, {_m}, {_i::*})

command /system_message:
    permission: op
    trigger:
        # (1) inserts with no accent, no quotes
        # [1] inserts with accent, but no quotes
        # {1} inserts with accent and quotes
        send systemMessage("info","[1]'s character is named {2}.", (player, "Sovde"))
        send systemMessage("warning","Are you sure you want to rename your character? Run [1] to confirm.", ("/rename confirm"))
        send sysMsg("success","Renamed your character to {1}!", ("Edvos"))
        send sm("error","Character names cannot be more than (1) characters!", (96))